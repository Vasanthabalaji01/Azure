{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Cloud Made Easy with Mr. Cloud Explorer!</p> <ul> <li>Plan</li> <li>Design </li> <li>Deploy</li> <li>Maintain</li> </ul> <p>Don't Just Deploy, Control It!</p> <p>Get Started Now!</p> <p>\u2764\ufe0f Show Your support! </p> <p></p>"},{"location":"about/","title":"About","text":"<p>I have Share about key services like compute, storage, databases, and more.</p> <p></p> <p>I can't promise there won't be occasional performance hiccups, but at least you'll understand Azure well enough to troubleshoot them and maybe even explain them to the bill!</p>"},{"location":"Azure_service/intro/","title":"Intro","text":"<p>Core Services</p>"},{"location":"Azure_service/compute/azure_batch/azure_batch/","title":"Azure Batch","text":"<p>Azure Batch</p>"},{"location":"Azure_service/compute/container_instances/container_instances/","title":"Container Instances","text":"<p>Container Instances</p>"},{"location":"Azure_service/compute/vm/vm/","title":"Virtual Machines","text":"<p>Virtual Machines</p>"},{"location":"Cloud_Architecture/intro/","title":"Index","text":"Architecture Type Description One-Tier Architecture A single-layer architecture where the application and database reside on the same machine. Two-Tier Architecture Divides the application into a client and a server, with the database usually residing on the server. Three-Tier Architecture Separates the application into three layers: presentation, logic, and data, typically hosted on different servers. N-Tier Architecture Extends the three-tier architecture to include more layers, enhancing scalability and flexibility. Serverless Architecture Runs applications without managing the underlying infrastructure, relying on cloud services to handle server provisioning and scaling. Microservices Architecture Breaks down applications into small, loosely coupled services that can be developed, deployed, and scaled independently. Event-Driven Architecture Uses events to trigger and communicate between decoupled services, allowing for more responsive and scalable systems. Hybrid Architecture Combines multiple architectural styles to leverage the benefits of each, often mixing on-premises and cloud environments."},{"location":"Cloud_Architecture/Event_Driven/event_driven/","title":"Event-Driven","text":"<p>Events trigger automated tasks</p>"},{"location":"Cloud_Architecture/Hybrid/hybrid/","title":"Hybrid","text":"<p>Mix of cloud &amp; on-premises servers</p>"},{"location":"Cloud_Architecture/Microservices/microservices/","title":"Microservices","text":"<p>Independent services working together</p>"},{"location":"Cloud_Architecture/N_Tier/n_tier/","title":"N-Tier","text":"<p>Flexible tiers for complex applications (includes Three-Tier)</p> <p>Technologies</p> <ul> <li>(Powerful Python) Django (Python), Postgres DB</li> </ul> <p>Azure</p> <ul> <li>Azure Registry, Azure Container 2 various containers, Azure Functions, Database - Azure SQL Database, Azure Cosmos DB, Application Gateway, Azure VNet, Monitor</li> </ul>"},{"location":"Cloud_Architecture/One_Tier/one_tier/","title":"One-Tier","text":"<p>All-in-one, Simple Static Site</p> <p>Technologies - HTML, CSS, JavaScript, React</p> <p>Azure</p> <ul> <li>Azure Blob Storage, Azure VNet, Azure Content Delivery Network</li> </ul>"},{"location":"Cloud_Architecture/Serverless/serverless/","title":"Serverless","text":"<p>Code runs on events, with no server management</p> <p>Azure</p> <ul> <li>Azure functions</li> </ul>"},{"location":"Cloud_Architecture/Three_Tier/three_tier/","title":"Three-Tier","text":"<p>Dedicated Database tier Frontend API &amp; Backend</p> <p>Technologies</p> <ul> <li>(Modern JS with Azure) React, Node.js, Azure Cosmos DB</li> </ul> <p>Azure</p> <ul> <li>Azure Registry, Azure Container 2 various containers, Azure Functions, Database - Azure SQL Database, Azure Cosmos DB, Application Gateway, Azure VNet, Monitor</li> </ul>"},{"location":"Cloud_Architecture/Two_Tier/two_tier/","title":"Two-Tier","text":"<p>Separate Frontend &amp; Backend</p> <p>Technologies</p> <ul> <li>(Familiar Stack) Flask (Python), Microsoft SQL Server (on-premises), RDS (AWS)</li> <li>(Modern JS) React, Node.js, DynamoDB (AWS)</li> <li>(Traditional Web Dev) HTML, CSS, JavaScript, PHP, MySQL</li> </ul> <p>Azure</p> <ul> <li>Azure Virtual Machines using Windows Server, Database - Azure SQL Database Azure Cosmos DB, Application Gateway, Azure VNet</li> </ul>"},{"location":"Cloud_Security/intro/","title":"Intro","text":"<p>cracking....</p>"}]}